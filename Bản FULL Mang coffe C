#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define max 100
#define NAME "Group11"
#define PASS "tainamduyquy"

//Hiển thị chức năng của quản lý
void showManage() {
    printf(" -------------------------\n");
    printf("| Đăng nhập với chức năng | \n");
    printf(" -------------------------\n");
    printf("|  1. Quản Lý Menu        | \n");
    printf(" -------------------------\n");
    printf("|  2. Quản Lý Nhân Sự     |\n");
    printf(" -------------------------\n");
    printf("|  3. Quản Lý Doanh Thu   |\n");
    printf(" -------------------------\n");
    printf("|  4. Đăng Xuất           |\n");
    printf(" -------------------------\n");
    printf("Chọn chức năng : ");
}
//Quản lý món ăn
void showManageMenu() {
    printf(" -------------------------\n");
    printf("|      Quản Lý Menu       | \n");
    printf(" -------------------------\n");
    printf("|    1. Thêm Món Mới     | \n");
    printf(" -------------------------\n");
    printf("|    2. Sửa Món           |\n");
    printf(" -------------------------\n");
    printf("|    3. Xoá Món           |\n");
    printf(" -------------------------\n");
    printf("|    4. Tìm Món           |\n");
    printf(" -------------------------\n");
    printf("|    5. Sắp Xếp Món       |\n");
    printf(" -------------------------\n");
    printf("|    6. Lưu Vào FILE      |\n");
    printf(" -------------------------\n");
    printf("|    7. Quay lại          |\n");
    printf(" -------------------------\n");
    printf("Chọn một chức năng: ");
}
//Quản lý nhân viên
void showManageStaff(){
    printf(" -------------------------\n");
    printf("|     Quản Lý Nhân Viên   | \n");
    printf(" -------------------------\n");
    printf("|    1. Thêm Nhân Viên    | \n");
    printf(" -------------------------\n");
    printf("|    2. Sửa Thông Tin     |\n");
    printf(" -------------------------\n");
    printf("|    3. Xoá Nhân Viên     |\n");
    printf(" -------------------------\n");
    printf("|    4. Tìm Nhân Viên     |\n");
    printf(" -------------------------\n");
    printf("|    5. Sắp Xếp Nhân Viên |\n");
    printf(" -------------------------\n");
    printf("|    6. Lưu Danh Sách     |\n");
    printf(" -------------------------\n");
    printf("|    7. Quay Lại          |\n");
    printf(" -------------------------\n");
    printf("Chọn một chức năng: ");
}
//Quản lý doanh thu
void showManageRevenue() {
    printf(" -------------------------\n");
    printf("|    Quản Lý Doanh Thu    | \n");
    printf(" -------------------------\n");
    printf("|    1. Gọi Món           |\n");
    printf(" -------------------------\n");
    printf("|    2. Tính Tiền Lương   |\n");
    printf(" -------------------------\n");
    printf("|    3. Quay Lại          |\n");
    printf(" -------------------------\n");
    printf("Chọn chức năng : ");
}
typedef struct {
    int id;
    char name[100];
    double price;
} dish;

dish menu[max];
int number = 0;
//Hiển Thị Món
void showDish(){
    if (number == 0) {
        printf("Chưa Có Món!\n");
        return;
    }
    for (int i = 0; i < number; i++) {
        printf("%d %s %.lf\n", menu[i].id, menu[i].name, menu[i].price);
    }
}
//Thêm Món (1.1)
void addDish() {
    while (1) {
        int num;
        printf("Nhập Số Lượng Món Mới Thêm Vào: ");
        scanf("%d", &num);
        if (number + num <= max) {
            for (int i = 0; i < num; i++) {
                dish newDish;
                printf("Nhập Thông Tin Món Thứ %d : \n", number + 1);
                printf("Nhập Mã Món: ");
                scanf("%d", &newDish.id);
                printf("Nhập Tên Món: ");
                getchar(); 
                fgets(newDish.name, sizeof(newDish.name), stdin);
                newDish.name[strcspn(newDish.name, "\n")] = '\0';
                printf("Nhập Giá Món: ");
                scanf("%lf", &newDish.price);
                menu[number] = newDish;
                number++;
            }
            break;
        } else {
            printf("Số Lượng Thêm Vào Quá Mức Cho Phép. Vui Lòng Nhập Lại\n");
        }
    }
}

//Sửa Món(1.2)
void editDishId() {
    if(number!=0){
    int id;
    int found=0;
    while (!found){
        printf("Nhập Mã Món Bạn Muốn Sửa: ");
        scanf("%d", &id);
        for (int i = 0; i < number; i++) {
            if (menu[i].id == id) {
                printf("Nhập Tên Mới: ");
                getchar(); 
                fgets(menu[i].name, sizeof(menu[i].name), stdin);
                menu[i].name[strcspn(menu[i].name, "\n")] = '\0';
                printf("Nhập Giá Mới: ");
                scanf("%lf", &menu[i].price);
                printf("Sửa Món Thành Công.\n");
                found = 1;
                break;
            }
        }
        if (!found) {
            printf("Không Tìm Thấy Món Muốn Xoá. Vui Lòng Nhập Lại.\nThoát Nhập 0\n");
        }
        if(id==0){
            break;
        }
    }
    } else {
        printf("Chưa Có Món Vui Lòng Thêm Món\n");
        addDish();
    }
}

//Xoá Món(1.3)
void deleteDishId() {
    if(number==0){
    int id;
    int found=0;
    while (!found) {
        printf("Nhập Mã Món Bạn Muốn Xoá: ");
        scanf("%d", &id);
        for (int i = 0; i < number; i++) {
            if (menu[i].id == id) {
                for (int j = i; j < number - 1; j++) {
                    menu[j] = menu[j + 1];
                }
                number--;
                printf("Xoá Món Thành Công.\n");
                found = 1;
                break;
            }
        }
        if (!found) {
            printf("Không Tìm Thấy Món Muốn Xoá. Vui Lòng Nhập Lại.\nThoát Nhập 0\n");
        }
        if(id==0){
            break;
        }
    }
    } else {
        printf("Chưa Có Món Vui Lòng Thêm Món\n");
        addDish();
    }
}

//Tìm Món Theo Mã(1.4.1)
void searchDishId() {
    if(number!=0){
    int id;
    int found = 0;
    while (!found) {
        printf("Nhập Mã Món Muốn Tìm: ");
        scanf("%d", &id);
        for (int i = 0; i < number; i++) {
            if (menu[i].id == id) {
                printf("Món Tìm Thấy: \nMã=%d\nTên=%s\nGiá=%.2lf\n", menu[i].id, menu[i].name, menu[i].price);
                found = 1;
                return;
            }
        }
        if (!found) {
            printf("Không Thấy Món Bạn Muốn Tìm. Vui Lòng Nhập Lại.\n");
        }
        if(id==0){
            break;
        }
    }
    } else {
        printf("Chưa Có Món Vui Lòng Thêm Món.\n");
        addDish();
    }
}

//Tìm Món Theo Giá(1.4.2)
void searchDishPrice() {
    if(number!=0){
    double price;
    int found = 0;
    while (!found) {
        printf("Nhập Giá Món Bạn Muốn Tìm: ");
        scanf("%lf", &price);
        for (int i = 0; i < number; i++) {
            if (menu[i].price == price) {
                printf("Món Cần Tìm: \nMã=%d\nTên=%s\nGiá=%.2lf\n", menu[i].id, menu[i].name, menu[i].price);
                found = 1;
                return;
            }
        }
        if (!found) {
            printf("Không Tìm Thấy Món Bạn Cần. Vui Lòng Chọn Lại.\nMuốn Thoát Nhập 0.\n");
        }
        if(price==0){
        break;
    }
    }
    } else {
        printf("Chưa Có Món Vui Lòng Nhập Món.\n");
        addDish();
    }
}

//Sắp Xếp Món Theo Mã(1.5.1)
void sortDishId() {
    for (int i = 0; i < number - 1; i++) {
        for (int j = i + 1; j < number; j++) {
            if (menu[i].id > menu[j].id) {
                dish tmp = menu[i];
                menu[i] = menu[j];
                menu[j] = tmp;
            }
        }
    }
    printf("Sắp Xếp Xong.\n");
}

//Sắp Xếp Món Theo Giá(1.5.2)
void sortDishPrice() {
    for (int i = 0; i < number - 1; i++) {
        for (int j = i + 1; j < number; j++) {
            if (menu[i].price > menu[j].price) {
                dish tmp = menu[i];
                menu[i] = menu[j];
                menu[j] = tmp;
            }
        }
    }
    printf("Sắp Xếp Xong.\n");
}

//Lưu Món Vào FILE (1.6)
void saveToFileDish() {
    FILE *file = fopen("MenuC.txt", "w");
    if (file == NULL) {
        printf("Không Thể Lưu Vào FILE!\n");
        return;
    }
    for (int i = 0; i < number; i++) {
        fprintf(file, "%d\t%s\t%.2lf \n", menu[i].id, menu[i].name, menu[i].price);
    }
    fclose(file);
    printf("Lưu Dữ Liệu Thành Công\n");
}
//Gọi Món (3.1)
void orderDish() {
    if(number!=0){
    showDish();
    int x;
    double tong = 0;
    while (1) {
        printf("Số Loại Món Bạn Muốn Chọn: ");
        scanf("%d", &x);
        if (x > 0 && x <= number) {
            break;
        } else {
            printf("Số Loại Món Vượt Quá Danh Sách Món.Vui Lòng Nhập Lại!\n");
        }
    }
    FILE *file = fopen("HoaDon.txt", "w");
    if (file == NULL) {
        printf("Không Thể Tạo FILE Hoá Đơn!\n");
        return;
    }
    for (int i = 0; i < x; i++) {
        int y, z;
        while (1) {
            printf("Nhập Mã Món Thứ %d: ", (i + 1));
            scanf("%d", &y);
            int found = 0;
            for (int j = 0; j < number; j++) {
                if (menu[j].id == y) {
                    printf("Nhập Số Lượng Món %s: ", menu[j].name);
                    scanf("%d", &z);
                    tong += menu[j].price * z;
                    fprintf(file, "%d %s %.2lf Thành Tiền: %.2lf\n", menu[j].id, menu[j].name, menu[j].price, menu[j].price * z);
                    found = 1;
                    break;
                }
            }
            if (found) {
                break;
            } else {
                printf("Không Tìm Thấy Món. Vui Lòng Nhập Lại!\n");
            }
        }
    }
    fprintf(file, "Tổng Thanh Toán: %.2lf\n", tong);
    fclose(file);
    printf("Tổng Thanh Toán: %.2lf\n", tong);
    } else {
        printf("Chưa Có Món Vui Lòng Thêm.\n");
        addDish();
    }
}

typedef struct {
    int id ;
    char name[100];
    double slr; //salary(tien luong)
} people;

people staff[max];
int nop = 0; //number of people

//Hiển Thị Danh Sách Nhân Viên
void showStaff(){
    if (nop == 0) {
        printf("Chưa Có Nhân Viên!\n");
        return;
    }
    for (int i = 0; i < nop; i++) {
        printf("%d %s %.lf\n", staff[i].id, staff[i].name, staff[i].slr);
    }
}
//Thêm Nhân Viên(2.1)
void addStaff() {
    while (1) {
        int num;
        printf("Nhập Số Lượng Nhân Viên Bạn Thêm Vào: ");
        scanf("%d", &num);
        if (nop + num <= max) {
            for (int i = 0; i < num; i++) {
                people newstaff;
                printf("Nhập Thông Tin Nhân Viên Thứ %d : \n", nop + 1);
                printf("Nhập Mã Nhân Viên: ");
                scanf("%d", &newstaff.id);
                printf("Nhập Tên Nhân Viên: ");
                getchar(); 
                fgets(newstaff.name, sizeof(newstaff.name), stdin);
                newstaff.name[strcspn(newstaff.name, "\n")] = '\0';
                printf("Nhập Tiền Nhân Viên: ");
                scanf("%lf", &newstaff.slr);
                staff[nop] = newstaff;
                nop++;
            }
            break;
        } else {
            printf("Số Lượng Nhân Viên Vượt Mức Cho Phép. Vui Lòng Nhập Lại!\n");
        }
    }
}

//Sửa Nhân Viên(2.2)
void editStaffId() {
    if(nop!=0){
    int id;
    int found=0;
    while (!found) {
        printf("Nhập Mã Nhân Viên Bạn Muốn Sửa: ");
        scanf("%d", &id);
        for (int i = 0; i < number; i++) {
            if (staff[i].id == id){
                printf("Thông Tin Nhân Viên Hiện Tại:");
                printf("Mã: %d\nTên: %s\nLương: %.lf\n", staff[id].id, staff[id].name, staff[id].slr);
                printf("Nhập Tên Muốn Sửa: ");
                getchar(); 
                fgets(staff[i].name, sizeof(staff[i].name), stdin);
                staff[i].name[strcspn(staff[i].name, "\n")] = '\0';
                printf("Nhập Tiền Lương Mới: ");
                scanf("%lf", &staff[i].slr);
                printf("Sửa Thông Tin Thành Công.\n");
                found = 1;
                break;
            }
        }
        if (!found) {
            printf("Không Tìm Thấy Nhân Viên. Vui Lòng Nhập Lại.\nNếu Muốn Thoát Nhập 0.\n");
        }
        if(id==0){
            break;
        }
    }
    } else {
        printf("Chưa Có Nhân Viên Vui Lòng Nhập Thêm");
        addStaff();
    }
}
//Xoá Nhân Viên(2.3)
void deleteStaffId() {
    if(nop!=0){
    int id;
    int found=0;
    while (!found) {
        printf("Nhập Mã Nhân Viên Bạn Muốn Xoá: ");
        scanf("%d", &id);
        for (int i = 0; i < nop; i++) {
            if (staff[i].id == id) {
                for (int j = i; j < nop - 1; j++) {
                    staff[j] = staff[j + 1];
                }
                nop--;
                printf("Xoá Nhân Viên Thành Công.\n");
                found = 1;
                break;
            }
        }
        if (!found) {
            printf("Không Tìm Thấy Nhân Viên. Vui Lòng Nhập Lại.\nNếu Muốn Thoát Nhập 0.\n");
        }
        if(id==0){
            break;
        }
    }
    } else {
        printf("Chưa Có Nhân Viên. Vui Lòng Thêm!\n");
        addStaff();
    }
}

//Tìm Nhân Viên(2.4)
void searchStaffId() {
    if(nop!=0){
    int id;
    int found = 0;
    while (!found) {
        printf("Nhập Mã Món Bạn Muốn Tìm: ");
        scanf("%d", &id);
        for (int i = 0; i < number; i++) {
            if (staff[i].id == id) {
                printf("Món Tìm Thấy: \nMã=%d\nTên=%s\nGiá=%.2lf\n", staff[i].id, staff[i].name,staff[i].slr);
                found = 1;
                return;
            }
        }
        if (!found) {
            printf("Không Tìm Thấy Nhân Viên. Vui Lòng Nhập Lại.\nNếu Muốn Thoát Nhập 0.\n");
        }
        if(id==0){
            break;
        }
    }
    } else {
        printf("Chưa Có Nhân Viên Vui LÒng Thêm Nhân Viên.\n");
        addStaff();
    }
}
//Sắp Xếp Nhân Viên Theo Mã(2.5)
void sortStaffId() {
    for (int i = 0; i < number - 1; i++) {
        for (int j = i + 1; j < number; j++) {
            if (staff[i].id > staff[j].id) {
                people tmp = staff[i];
                staff[i] = staff[j];
                staff[j] = tmp;
            }
        }
    }
    printf("Sắp Xếp Xong.\n");
}

//Lưu Danh Sách Nhân Viên(2.6)
void saveToFileStaff() {
    FILE *file = fopen("StaffC.txt", "w");
    if (file == NULL) {
        printf("Không Thể Lưu Vào FILE!\n");
        return;
    }
    for (int i = 0; i < nop; i++) {
        fprintf(file, "%d\t%s\t%.2lf \n", staff[i].id, staff[i].name, staff[i].slr);
    }
    fclose(file);
    printf("Lưu Dữ Liệu Thành Công\n");
}
//Tính Lương(3.2)
void calculateSalaryById() {
    if(nop!=0){
    int id;
    int found = 0;
    double hoursWorked;
    double totalSalary;

    printf("Nhập Mã Nhân Viên Bạn Muốn Tính Tiền Lương: ");
    scanf("%d", &id);
    while(!found){
    for (int i = 0; i < nop; i++) {
        if (staff[i].id == id) {
            printf("Nhập Số Giờ Làm Việc Của Nhân Viên %s: ", staff[i].name);
            scanf("%lf", &hoursWorked);
            totalSalary = staff[i].slr * hoursWorked;
            printf("Tổng Tiền Lương Của Nhân Viên %s (ID %d) Là: %.2lf\n", staff[i].name, staff[i].id, totalSalary);
            found = 1;
            break;
        }
    }
    if (!found) {
        printf("Không Tìm Thấy Nhân Viên Có ID %d. Vui Lòng Chọn Lại.\nNếu Muốn Thoát Nhập 0\n", id);
    }
    if(id==0){
        break;
    }
    }
    } else {
        printf("Chưa Có Nhân Viên Vui LÒng Thêm Nhân Viên\n");
        addStaff();
    }
}

int main() {
    while (1) {
        int check = 0;
        do {
            char NameLogin[50], Passwork[50];
            printf("Nhập Tên Đăng Nhập: ");
            fgets(NameLogin, sizeof(NameLogin), stdin);
            NameLogin[strcspn(NameLogin, "\n")] = 0;
            printf("Nhập Mật Khẩu: ");
            fgets(Passwork, sizeof(Passwork), stdin);
            Passwork[strcspn(Passwork, "\n")] = 0;

            if (strcmp(NameLogin, NAME) == 0 && strcmp(Passwork, PASS) == 0) {
                check = 1;
            } else {
                printf("Tên Đăng Nhập Hoặc Mật Khẩu Không Đúng. Thử Lại!\n");
            }
        } while (!check);

        int manage, manageMenu, manageStaff, manageRevenue;
        int choice1, choice2;
        do {
            system("clear");
            showManage();
            scanf("%d", &manage);
            getchar(); 

            if (manage == 4) {
                system("clear");
                break;
            }
            //Menu
            switch (manage) {
                case 1:
                    system("clear");
                    do {
                        showManageMenu();
                        scanf("%d", &manageMenu);
                        getchar();
                        switch (manageMenu) {
                            case 1:
                                addDish();
                                break;
                            case 2:
                                editDishId();
                                break;
                            case 3:
                                deleteDishId();
                                break;
                            case 4:
                                printf("1. Tìm Món Theo Mã\n2. Tìm Món Theo Giá\nNhập Lựa Chọn Của Bạn: ");
                                scanf("%d", &choice2);
                                getchar(); 
                                switch (choice2) {
                                    case 1:
                                        searchDishId();
                                        break;
                                    case 2:
                                        searchDishPrice();
                                        break;
                                    default:
                                        printf("Lựa Chọn Không Hợp Lệ. Chọn Lại!\n");
                                        break;
                                }
                                break;
                            case 5:
                                printf("1. Sắp Xếp Món Theo Mã\n2. Sắp Xếp Món Theo Giá\nNhập Lựa Chọn Của Bạn: ");
                                scanf("%d", &choice1);
                                getchar();
                                switch (choice1) {
                                    case 1:
                                        sortDishId();
                                        break;
                                    case 2:
                                        sortDishPrice();
                                        break;
                                    default:
                                        printf("Lựa chọn không hợp lệ\n");
                                        break;
                                }
                                break;
                            case 6:
                                saveToFileDish();
                                break;
                            case 7:
                                break;
                            default:
                                printf("Lựa Chọn Không Hợp Lệ. Chọn Lại!\n");
                                break;
                        }
                    } while (manageMenu != 7);
                    break;
                //Nhân Viên
                case 2:
                    system("clear");
                    do {
                        showManageStaff();
                        scanf("%d", &manageStaff);
                        getchar();
                        switch (manageStaff) {
                            case 1:
                                addStaff();
                                break;
                            case 2:
                                editStaffId();
                                break;
                            case 3:
                                deleteStaffId();
                                break;
                            case 4:
                                searchStaffId();
                                break;
                            case 5:
                                sortStaffId();
                                break;
                            case 6:
                                saveToFileStaff();
                                break;
                            case 7:
                                break;
                            default:
                                printf("Lựa Chọn Không Hợp Lệ. Chọn Lại!\n");
                                break;
                        }
                    } while (manageStaff != 7);
                    break;
                //Doanh Thu
                case 3:
                    system("clear");
                    do {
                        showManageRevenue();
                        scanf("%d", &manageRevenue);
                        getchar(); 
                        switch (manageRevenue) {
                            case 1:
                                orderDish();
                                break;
                            case 2:
                                calculateSalaryById();
                                break;
                            case 3:
                                break; // Thoát
                            default:
                                printf("Lựa Chọn Không Hợp Lệ. Chọn Lại!\n");
                                break;
                        }
                    } while (manageRevenue != 3);
                    break;

                default:
                    printf("Không có lựa chọn. Chọn lại!\n");
                    break;
            }
        } while (1); 
    }
    return 0;
}
